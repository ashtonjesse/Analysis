%this script calculates an average conduction velocity in a small
%region around the origin and shift sites for each beat leading up to the
%shift and 

%this script compares the average action potential amplitude for 5 baseline
%beats vs the beats preceding the shift in the central node DP
%site
clear all;
close all;
%% barodata pre-ivb
aControlFiles = {{...
    'G:\PhD\Experiments\Auckland\InSituPrep\20140718\20140718baro001' ...
    },{...
    'G:\PhD\Experiments\Auckland\InSituPrep\20140722\20140722baro001' ...
    },{...
    'G:\PhD\Experiments\Auckland\InSituPrep\20140723\20140723baro003' ... %example of uncoupling
    },{...
    'G:\PhD\Experiments\Auckland\InSituPrep\20140813\20140813baro003' ... %lots of competition on the way down. worth fitting DD
    },{...
    'G:\PhD\Experiments\Auckland\InSituPrep\20140814\20140814baro001' ... %another good example of uncoupling
    },{...
    'G:\PhD\Experiments\Auckland\InSituPrep\20140821\20140821baro001' ...
    },{...
    'G:\PhD\Experiments\Auckland\InSituPrep\20140826\20140826baro001' ...
    },{...
    'G:\PhD\Experiments\Auckland\InSituPrep\20140828\20140828baro001' ...
    }};
aShiftIndexes = {{27},{28},{56},{24},{28},{35},{46},{37}}; 

%% barodata post-ivb
% aControlFiles = {{...
%      'G:\PhD\Experiments\Auckland\InSituPrep\20140813\20140813baro005'...
%     },{...
%     'G:\PhD\Experiments\Auckland\InSituPrep\20140814\20140814baro004'...
%     },{...
%     'G:\PhD\Experiments\Auckland\InSituPrep\20140821\20140821baro004'...
%     },{...
%     'G:\PhD\Experiments\Auckland\InSituPrep\20140826\20140826baro004'...
%     },{...
%     'G:\PhD\Experiments\Auckland\InSituPrep\20140828\20140828baro004'...
%     }};
% aShiftIndexes = {{38},{40},{49},{29},{25}}; 

%% chemodata pre-ivb
% aControlFiles = {{...
%      'G:\PhD\Experiments\Auckland\InSituPrep\20140813\20140813chemo002' ...
%     },{...
%     'G:\PhD\Experiments\Auckland\InSituPrep\20140814\20140814chemo001' ...
%     },{...
%     'G:\PhD\Experiments\Auckland\InSituPrep\20140821\20140821chemo001' ...
%     },{...
%     'G:\PhD\Experiments\Auckland\InSituPrep\20140826\20140826chemo001' ...
%     },{...
%     'G:\PhD\Experiments\Auckland\InSituPrep\20140828\20140828chemo001' ...
%     }};
% aShiftIndexes = {{39},{33},{25},{29},{26}};
%% chemodata post-ivb
% aControlFiles = {{...
%      'G:\PhD\Experiments\Auckland\InSituPrep\20140813\20140813chemo003' ...
%     },{...
%     'G:\PhD\Experiments\Auckland\InSituPrep\20140814\20140814chemo003' ...
%     },{...
%     'G:\PhD\Experiments\Auckland\InSituPrep\20140821\20140821chemo004' ...
%     },{...
%     'G:\PhD\Experiments\Auckland\InSituPrep\20140826\20140826chemo004' ...
%     },{...
%     'G:\PhD\Experiments\Auckland\InSituPrep\20140828\20140828chemo004' ...
%     }};

%% cchdata pre-ivb
% aControlFiles = {{...
%     'G:\PhD\Experiments\Auckland\InSituPrep\20140813\20140813CCh003' ...
%     },{...
%     'G:\PhD\Experiments\Auckland\InSituPrep\20140814\20140814CCh001' ...
%     },{...
%     'G:\PhD\Experiments\Auckland\InSituPrep\20140821\20140821CCh001' ...
%     },{...
%     'G:\PhD\Experiments\Auckland\InSituPrep\20140826\20140826CCh001' ...
%     },{...
%     'G:\PhD\Experiments\Auckland\InSituPrep\20140828\20140828CCh001' ...
%     }};

%% cchdata post-ivb
% aControlFiles = {{...
%     'G:\PhD\Experiments\Auckland\InSituPrep\20140813\20140813CCh005' ...
%     },{...
%     'G:\PhD\Experiments\Auckland\InSituPrep\20140814\20140814CCh006' ...
%     },{...
%     'G:\PhD\Experiments\Auckland\InSituPrep\20140821\20140821CCh004' ...
%     },{...
%     'G:\PhD\Experiments\Auckland\InSituPrep\20140826\20140826CCh003' ...
%      },{...
%     'G:\PhD\Experiments\Auckland\InSituPrep\20140828\20140828CCh005' ...
%     }};
% 
%create figures
try 
    close(oFigure);
catch ex
    
end

oFigure = figure();
oAxes = axes('parent',oFigure);
%get the APAs
%initiate variables
aOriginCVData = cell(numel(aControlFiles),1);
aShiftCVData = cell(numel(aControlFiles),1);
aCTCVData= cell(numel(aControlFiles),1);
aDistance = zeros(numel(aControlFiles),1);
dRadius = 0.5;

% 
aColours = distinguishable_colors(numel(aControlFiles));
for p = 1:numel(aControlFiles)
    aFolder = aControlFiles{p};
    aOriginCVData{p} = cell(1,numel(aFolder));
    aShiftCVData{p} = cell(1,numel(aFolder));
    aCTCVData{p} = cell(1,numel(aFolder));
    [pathstr, name, ext, versn] = fileparts(char(aFolder{1}));
    [startIndex, endIndex, tokIndex, matchStr, tokenStr, exprNames, splitStr] = regexp(char(aFolder{1}), '\');
    [startIndex, endIndex, tokIndex, matchStr, tokenStr, exprNames, splitStr] = regexp(char(aFolder{1}), splitStr{end-1});
    sStimulationType = splitStr{end}(1:end-3);
    switch (sStimulationType)
        case {'baro','chemo'}
            for j = 1:numel(aFolder)
                %load the optical file
                listing = dir(aFolder{j}); %names of files vary so just get all the files in dir
                aFilesInFolder = {listing(:).name}; %convert to cell array
                aFileIndex = regexp(aFilesInFolder, [sStimulationType,'\d*a?_\w*g10_LP100Hz-waveEach.mat']); %find index of right file
                aOpticalFileName = [aFolder{j},'\',aFilesInFolder{find(~cellfun('isempty', aFileIndex))}]; %build file name
                oOptical = GetOpticalFromMATFile(Optical,char(aOpticalFileName)); %get optical file
                fprintf('Loaded %s\n', aOpticalFileName);
                %                 %load the pressure file
                %                 aFileIndex = regexp(aFilesInFolder, 'Pressure.mat'); %find index of right file
                %                 sPressureFileName = [aFolder{j},'\',aFilesInFolder{find(~cellfun('isempty', aFileIndex))}]; %build file name
                %                 oPressure = GetPressureFromMATFile(Pressure,char(sPressureFileName),'Optical');
                %                 fprintf('Loaded %s\n', sPressureFileName);
                %                 %get the beats that lead up to the shift
                %                 aTimes = oPressure.oRecording(1).Electrodes.Processed.BeatRateTimes;
                %                 aBeats = aTimes > oPressure.TimeSeries.Original(oPressure.HeartRate.Decrease.Range(1)) & ...
                %                     aTimes < oPressure.TimeSeries.Original(oPressure.HeartRate.Decrease.Range(2));
                
                aBeats = false(size(oOptical.Beats.Indexes,1),1);
                aBeats(aShiftIndexes{p}{j}-15:aShiftIndexes{p}{j}+5) = true;
                aBeatIndexes = find(aBeats);
                %load activation data
                aActivationData = oOptical.PrepareActivationMap(100, 'Contour', 'arsps', 24, aBeatIndexes(1), [], []);
                for m = 2:length(aBeatIndexes)
                    aActivationData = oOptical.PrepareActivationMap(100, 'Contour', 'arsps', 24, aBeatIndexes(m), aActivationData, []);
                end
                disp('Collected activation data');
                %get central electrode by averaging the DP site for the first five beats
                aOriginData = MultiLevelSubsRef(oOptical.oDAL.oHelper,...
                    oOptical.Electrodes,'aghsm','Origin');
                aAvCoords = mean(cell2mat({oOptical.Electrodes(logical(sum(aOriginData(1:6,:),1))).Coords}),2);
                
                %get electrodes within neighbourhood
                aElectrodes = oOptical.GetElectrodesWithinRadius(aAvCoords', dRadius);
                if isfield(oOptical.Electrodes(1).arsps,'Map')
                    aAcceptedChannels = MultiLevelSubsRef(oOptical.oDAL.oHelper,oOptical.Electrodes,'arsps','Map');
                    aAcceptedChannels = aAcceptedChannels(aBeatIndexes(1),:);
                else
                    aAcceptedChannels = MultiLevelSubsRef(oOptical.oDAL.oHelper,oOptical.Electrodes,'Accepted');
                end
                aOriginElectrodes = aElectrodes(logical(aAcceptedChannels));
                %get shift electrode 
                aCoords = cell2mat({oOptical.Electrodes(logical(aOriginData(aShiftIndexes{p}{j},:))).Coords});
                if size(aCoords,2)>1
                    [C I] = min(aCoords(2,:));
                    aCoords=aCoords(:,I);
                end
                aDistance(p) = norm(aAvCoords - aCoords);
                %get electrodes within neighbourhood
                aElectrodes = oOptical.GetElectrodesWithinRadius(aCoords', dRadius);
                aShiftElectrodes = aElectrodes(logical(aAcceptedChannels));
                %get CT electrode 
                aCTData = MultiLevelSubsRef(oOptical.oDAL.oHelper,...
                    oOptical.Electrodes,'arsps','Exit');
                aCoords = cell2mat({oOptical.Electrodes(logical(aCTData(1,:))).Coords});
                %get electrodes within neighbourhood
                aElectrodes = oOptical.GetElectrodesWithinRadius(aCoords', dRadius);
                aCTElectrodes = aElectrodes(logical(aAcceptedChannels));
                %select average CV for these electrodes
                %                 aCV =  cell2mat({aActivationData.Beats(aBeats).CVApprox});
                aActTimes =  cell2mat({aActivationData.Beats(aBeats).ActivationTimes});
                aOriginCVData{p}{j} = nanmean(aActTimes(aOriginElectrodes,:),1);
                %select average CV for these electrodes
                aShiftCVData{p}{j} = nanmean(aActTimes(aShiftElectrodes,:),1);
                %select average CV for these electrodes
                aCTCVData{p}{j} = nanmean(aActTimes(aCTElectrodes,:),1);
                plot(oAxes,aOriginCVData{p}{j},'color',aColours(p,:),'linestyle','-');
                hold(oAxes,'on');
                plot(oAxes,aShiftCVData{p}{j},'color',aColours(p,:),'linestyle','--');
                plot(oAxes,aCTCVData{p}{j},'color',aColours(p,:),'linestyle','--');
            end
    end
end
aOriginCVArray = vertcat(aOriginCVData{:});
aOriginCVArray = vertcat(aOriginCVArray{:});
aOriginCVArray = aOriginCVArray';

aShiftCVArray = vertcat(aShiftCVData{:});
aShiftCVArray = vertcat(aShiftCVArray{:});
aShiftCVArray = aShiftCVArray';

aCTCVArray = vertcat(aCTCVData{:});
aCTCVArray = vertcat(aCTCVArray{:});
aCTCVArray = aCTCVArray';
% fprintf('%4.0f,%3.0f,%5.3f,%5.3f\n',iElectrode,iBeat,oActivation.AverageAPA(iElectrode),oActivation.Beats(iBeat).APAData(iElectrode)+oActivation.AverageAPA(iElectrode));