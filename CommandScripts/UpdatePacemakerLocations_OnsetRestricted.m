%This scipt obtains the x and y coordinates of all pacemaker locations
%across all recordings and all experiments for baroreflex, chemoreflex and
%CCh and saves the result to new location data files


% % set files of interest
aControlFiles = {{...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140703\20140703baro005' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140703\20140703baro006' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140703\20140703baro007' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140703\20140703baro008' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140703\20140703baro009' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140703\20140703baro010' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140703\20140703baro011' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140703\20140703baro012'...
    %     },{...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140715\20140715baro001' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140715\20140715baro002' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140715\20140715baro003' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140715\20140715baro004' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140715\20140715baro005' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140715\20140715baro006' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140715\20140715baro008' ...
    %     },{...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140718\20140718baro001' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140718\20140718baro002' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140718\20140718baro003' ...%4-9 rejected due to change in baseline rate aDistance includes baro008
    %     },{...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140722\20140722baro001' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140722\20140722baro002' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140722\20140722baro003' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140722\20140722baro004' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140722\20140722baro005' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140722\20140722baro006' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140722\20140722baro007' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140722\20140722baro008' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140722\20140722baro009' ...
    %     },{...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140723\20140723baro001' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140723\20140723baro002' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140723\20140723baro003' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140723\20140723baro004' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140723\20140723baro005' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140723\20140723baro006' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140723\20140723baro007' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140723\20140723baro008' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140723\20140723baro009'...
    %     },{...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140813\20140813baro003' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140813\20140813baro004'...
    %     },{...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140814\20140814baro001' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140814\20140814baro002' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140814\20140814baro003'...
    %     },{...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140821\20140821baro001' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140821\20140821baro002' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140821\20140821baro003'...
    %     },{...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140826\20140826baro001' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140826\20140826baro002' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140826\20140826baro003'...
    %     },{...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140828\20140828baro001' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140828\20140828baro002' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140828\20140828baro003'...
    %     },{...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140813\20140813chemo002' ...
    %     },{...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140814\20140814chemo001' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140814\20140814chemo002' ...
    %     },{...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140821\20140821chemo001' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140821\20140821chemo002' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140821\20140821chemo003' ...
    %     },{...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140826\20140826chemo001' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140826\20140826chemo002' ...
    % %     'G:\PhD\Experiments\Auckland\InSituPrep\20140826\20140826chemo003' ...
    %     },{...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140828\20140828chemo001' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140828\20140828chemo002' ...
    %     'G:\PhD\Experiments\Auckland\InSituPrep\20140828\20140828chemo003' ...
    %     },{...
    {...
    {'G:\PhD\Experiments\Auckland\InSituPrep\20140813\20140813CCh002\CCh002a_g10_LP100Hz-waveEach.mat'}, ...%a&b 10
    {'G:\PhD\Experiments\Auckland\InSituPrep\20140813\20140813CCh002\CCh002b_g10_LP100Hz-waveEach.mat'} ...
    },{...
    {'G:\PhD\Experiments\Auckland\InSituPrep\20140813\20140813CCh003\CCh003a_g10_LP100Hz-waveEach.mat'}, ...%a&c
    {'G:\PhD\Experiments\Auckland\InSituPrep\20140813\20140813CCh003\CCh003c_g10_LP100Hz-waveEach.mat'} ...
    }}, ...
    {{...
    {'G:\PhD\Experiments\Auckland\InSituPrep\20140814\20140814CCh001\CCh001a_g10_LP100Hz-waveEach.mat'}, ... %a&c
    {'G:\PhD\Experiments\Auckland\InSituPrep\20140814\20140814CCh001\CCh001c_g10_LP100Hz-waveEach.mat'} ...
    },{...
    {'G:\PhD\Experiments\Auckland\InSituPrep\20140814\20140814CCh002\CCh002a_g10_LP100Hz-waveEach.mat'}, ...%a&c+d
    {'G:\PhD\Experiments\Auckland\InSituPrep\20140814\20140814CCh002\CCh002c_g10_LP100Hz-waveEach.mat', ...
    'G:\PhD\Experiments\Auckland\InSituPrep\20140814\20140814CCh002\CCh002d_g10_LP100Hz-waveEach.mat'} ...
    },{...
    {'G:\PhD\Experiments\Auckland\InSituPrep\20140814\20140814CCh004\CCh004a_g10_LP100Hz-waveEach.mat', ...%b+a&d
    'G:\PhD\Experiments\Auckland\InSituPrep\20140814\20140814CCh004\CCh004b_g10_LP100Hz-waveEach.mat'}, ...
    {'G:\PhD\Experiments\Auckland\InSituPrep\20140814\20140814CCh004\CCh004d_g10_LP100Hz-waveEach.mat'} ...
    }}, ...
    {{...
    {'G:\PhD\Experiments\Auckland\InSituPrep\20140821\20140821CCh001\CCh001a_g10_LP100Hz-waveEach.mat', ...%a+b&d
    'G:\PhD\Experiments\Auckland\InSituPrep\20140821\20140821CCh001\CCh001b_g10_LP100Hz-waveEach.mat'}, ...
    {'G:\PhD\Experiments\Auckland\InSituPrep\20140821\20140821CCh001\CCh001d_g10_LP100Hz-waveEach.mat'} ...
    }}, ...
    {{...
    {'G:\PhD\Experiments\Auckland\InSituPrep\20140828\20140828CCh001\CCh001a_g10_LP100Hz-waveEach.mat', ... %b+a & c
    'G:\PhD\Experiments\Auckland\InSituPrep\20140828\20140828CCh001\CCh001b_g10_LP100Hz-waveEach.mat'}, ...
    {'G:\PhD\Experiments\Auckland\InSituPrep\20140828\20140828CCh001\CCh001c_g10_LP100Hz-waveEach.mat'} ...
    },{ ...
    {'G:\PhD\Experiments\Auckland\InSituPrep\20140828\20140828CCh002\CCh002a_g10_LP100Hz-waveEach.mat', ... %b+a & c, a 50 is phase shift, b 2 is shift outright, c 70 return with competition on 69
    'G:\PhD\Experiments\Auckland\InSituPrep\20140828\20140828CCh002\CCh002b_g10_LP100Hz-waveEach.mat'}, ...
    {'G:\PhD\Experiments\Auckland\InSituPrep\20140828\20140828CCh002\CCh002c_g10_LP100Hz-waveEach.mat'} ...
    },{...
    {'G:\PhD\Experiments\Auckland\InSituPrep\20140828\20140828CCh003\CCh003b_g10_LP100Hz-waveEach.mat'}, ...% b & c,  a 76 phase, b 21 outright, c 61 return
    {'G:\PhD\Experiments\Auckland\InSituPrep\20140828\20140828CCh003\CCh003c_g10_LP100Hz-waveEach.mat'} ... 
    }} ...
    };
% aOnsetShiftIndexes = { ...
% {41,50,36,39,33,37,35,51}, ...
% {27,30,28,34,30,30,28}, ...
% {27,38,37}, ...
% {28,36,42,46,50,68,57,79,87}, ...
% {56,50,56,51,78,49,50,60,55}, ...
% {24,34}, ...
% {28,31,42}, ...
% {35,40,49}, ...
% {46,35,39}, ...
% {37,39,38} ...
% }; %baro onset
% aRecoveryShiftIndexes = { ...
%   {66,66,62,63,52,52,51,72}, ...  
%   {50,48,45,60,46,44,38}, ...
%   {44,51,50}, ...
%   {65,56,62,67,70,77,75,88,92}, ...
%   {60,60,75,71,84,58,74,82,76}, ...
%   {50,67}, ...
%   {58,61,66}, ...
%   {54,57,64}, ...
%   {49,40,67}, ...
%   {56,72,64}...
% }; %baro recovery
% aOnsetShiftIndexes = {{39},{33,34},{25,25,47},{29,27},{34,37,41}}; %chemo onset
% aRecoveryShiftIndexes = {{52},{60,48},{3,54,61},{37,38},{57,51,52}}; %chemo recovery
% aShiftIndexes = {{{17},{51}},{{57,77,17},{47,67,9}},{{1},{51}},{{17,2,21},{54,70,61}}}; %CCh onset
aShiftIndexes = { ...
    {{ ... %20140813 
    {{2:30}} ... %onset 10
    {{2:30}} ... %recovery 1
    },{
    {{2:27}} ... %onset 17
    {{41:71}} ... %recovery 51
    }}, ...
    {{ ... %20140814
    {{37:67}} ... %57
    {{37:67}} ... %47
    },{ ... %20140814
    {{57:87}} ... %77
    {{56:71},{2:16}} ... %67
    },{ ... %20140814
    {{115:119},{2:27}} ... %17 b
    {{2:29}} ... %9
    }}, ...
    {{ ... %20140821
    {{85:105},{2:11}} ... %1 b
    {{41:60}} ... %51
    }}, ...
    {{ ... %20140828
    {{91:95},{2:27}} ... %17 b
    {{44:71}} ... %54
    },{ ...
    {{71:90},{2:12}} ... %2 b
    {{60:76}} ... %70
    },{ ...
    {{2:31}} ... %21
    {{51:73}} ... %61
    }}...
    };
% % aData = aControlFiles;
% load('G:\PhD\Experiments\Auckland\InSituPrep\CChTotalNumberOfBeats.mat');
% for p = 1:numel(aControlFiles)
%     aFolder = aControlFiles{p};
%     for j = 1:numel(aFolder)
%         %loop through onset and recovery
%         for ii = 1:2
%                     %loop through files specified for this phase
%                     for nn = 1:numel(aFolder{j}{ii})
%                         aFile = char(aFolder{j}{ii}{nn});
%                         %load the optical file
%                         oOptical = GetOpticalFromMATFile(Optical,aFile); %get optical file
%                         fprintf('Loaded %s\n', aFile);
%                         aData{p}{j}{ii}{nn} = size(oOptical.Beats.Indexes,1);
%                     end
%         end
%     end
% end

sStimulationType = 'CCh';
%update origins
for p = 1:numel(aControlFiles)
    aFolder = aControlFiles{p};
    switch (sStimulationType)
        case {'baro','chemo'}
            %             % %                 get the location data
            %             [pathstr, name, ext, versn] = fileparts(char(aFolder{1}));
            %             [startIndex, endIndex, tokIndex, matchStr, tokenStr, exprNames, splitStr] = regexp(char(aFolder{1}), '\');
            %             [startIndex, endIndex, tokIndex, matchStr, tokenStr, exprNames, splitStr] = regexp(char(aFolder{1}), splitStr{end-1});
            %             sStimulationType = splitStr{end}(1:end-3);
            %             load([pathstr,'\',upper(sStimulationType(1)),sStimulationType(2:end),'LocationData.mat']);
            OnsetDPSites = repmat(struct('X1',NaN(21,1),'Y1',NaN(21,1),'X2',NaN(21,1),'Y2',NaN(21,1),...
                'CL1',NaN(21,1),'CL2',NaN(21,1)),1,numel(aFolder));
            RecoveryDPSites = repmat(struct('X1',NaN(21,1),'Y1',NaN(21,1),'X2',NaN(21,1),'Y2',NaN(21,1),...
                'CL1',NaN(21,1),'CL2',NaN(21,1)),1,numel(aFolder));
            for j = 1:numel(aFolder)
                %load the optical file
                listing = dir(aFolder{j}); %names of files vary so just get all the files in dir
                aFilesInFolder = {listing(:).name}; %convert to cell array
                if strcmpi(sStimulationType,'chemo') && p == 3 && j == 1
                    sSearchString = '\d*b?_\w*g10_LP100Hz-waveEach.mat';
                else
                    sSearchString = '\d*a?_\w*g10_LP100Hz-waveEach.mat';
                end
                aFileIndex = regexp(aFilesInFolder, [sStimulationType,sSearchString]); %find index of right file
                aOpticalFileName = [aFolder{j},'\',aFilesInFolder{find(~cellfun('isempty', aFileIndex))}]; %build file name
                oOptical = GetOpticalFromMATFile(Optical,char(aOpticalFileName)); %get optical file
                fprintf('Loaded %s\n', aOpticalFileName);
                aOnsetBeats = aOnsetShiftIndexes{p}{j}-15:aOnsetShiftIndexes{p}{j}+5;
                aRecoveryBeats = max(aRecoveryShiftIndexes{p}{j}-5,1):min(aRecoveryShiftIndexes{p}{j}+15,size(oOptical.Beats.Indexes,1));
                % % %get origin data
                aOrigins = MultiLevelSubsRef(oOptical.oDAL.oHelper,oOptical.Electrodes,'aghsm','Origin');
                aOnsetOrigins = aOrigins(aOnsetBeats,:);
                aRecoveryOrigins = aOrigins(aRecoveryBeats,:);
                %loop through beats
                dOnsetDistance = [NaN,NaN];
                dRecoveryDistance = [NaN,NaN];
                %get the axis points
                aAxisData = cell2mat({oOptical.Electrodes(:).AxisPoint});
                oAxesElectrodes = oOptical.Electrodes(aAxisData);
                aAxesCoords = cell2mat({oAxesElectrodes(:).Coords});
                bFirstOnsetPoint = false;
                bFirstRecoveryPoint = false;
                if isfield(oOptical.Electrodes(1),'amsps')
                    sEvent = 'amsps';
                else
                    sEvent = 'arsps';
                end
                for n = 1:21
                    OnsetBeatIndex = aOnsetBeats(n);
                    if n > numel(aRecoveryBeats)
                        %this is because p==3,j==1 recovery shift cycle is
                        %less than 5 so the total list of recoverybeats is
                        %not 21 long
                        break;
                    end
                    RecoveryBeatIndex = aRecoveryBeats(n);
                    aOnsetElectrodes = oOptical.Electrodes(aOnsetOrigins(n,:));
                    aRecoveryElectrodes = oOptical.Electrodes(aRecoveryOrigins(n,:));
                    if ~isempty(aOnsetElectrodes)
                        bFirstOnsetPoint = true;
                        aOnsetBeatPoints = cell2mat({aOnsetElectrodes(:).Coords});
                        for m = 1:size(aOnsetBeatPoints,2)
                            %transform coords
                            aNewBeatPoints = TransformCoordinates(aAxesCoords(:,2),aAxesCoords(:,1),aOnsetBeatPoints(:,m));
                            OnsetDPSites(j).(['X',num2str(m)])(n) = aNewBeatPoints(1);
                            OnsetDPSites(j).(['Y',num2str(m)])(n) = aNewBeatPoints(2);
                            dOnsetDistance = [aNewBeatPoints(1),aNewBeatPoints(2)];
                            OnsetDPSites(j).(['CL',num2str(m)])(n) = 1000 * (oOptical.TimeSeries(aOnsetElectrodes(m).(sEvent).Index(OnsetBeatIndex) - ...
                                1 + oOptical.Beats.Indexes(OnsetBeatIndex,1)) - ...
                                oOptical.TimeSeries(aOnsetElectrodes(m).(sEvent).Index(OnsetBeatIndex-1) - ...
                                1 + oOptical.Beats.Indexes(OnsetBeatIndex-1,1)));
                        end
                        aCurrentOnsetOrigins = aOnsetElectrodes;
                    elseif bFirstOnsetPoint
                        OnsetDPSites(j).X1(n) = dOnsetDistance(1);
                        OnsetDPSites(j).Y1(n) = dOnsetDistance(2);
                        OnsetDPSites(j).CL1(n) = 1000 * (oOptical.TimeSeries(aCurrentOnsetOrigins(1).(sEvent).Index(OnsetBeatIndex) - ...
                            1 + oOptical.Beats.Indexes(OnsetBeatIndex,1)) - ...
                            oOptical.TimeSeries(aCurrentOnsetOrigins(1).(sEvent).Index(OnsetBeatIndex-1) - ...
                            1 + oOptical.Beats.Indexes(OnsetBeatIndex-1,1)));
                    end
                    
                    if ~isempty(aRecoveryElectrodes)
                        bFirstRecoveryPoint = true;
                        aRecoveryBeatPoints = cell2mat({aRecoveryElectrodes(:).Coords});
                        for m = 1:size(aRecoveryBeatPoints,2)
                            %repeat for recovery beat
                            aNewBeatPoints = TransformCoordinates(aAxesCoords(:,2),aAxesCoords(:,1),aRecoveryBeatPoints(:,m));
                            RecoveryDPSites(j).(['X',num2str(m)])(n) = aNewBeatPoints(1);
                            RecoveryDPSites(j).(['Y',num2str(m)])(n) = aNewBeatPoints(2);
                            dRecoveryDistance = [aNewBeatPoints(1),aNewBeatPoints(2)];
                            RecoveryDPSites(j).(['CL',num2str(m)])(n) = 1000 * (oOptical.TimeSeries(aRecoveryElectrodes(m).(sEvent).Index(max(RecoveryBeatIndex,2)) - ...
                                1 + oOptical.Beats.Indexes(max(RecoveryBeatIndex,2),1)) - ...
                                oOptical.TimeSeries(aRecoveryElectrodes(m).(sEvent).Index(max(RecoveryBeatIndex-1,1)) - ...
                                1 + oOptical.Beats.Indexes(max(RecoveryBeatIndex-1,1),1)));
                        end
                        aCurrentRecoveryOrigins = aRecoveryElectrodes;
                    elseif bFirstRecoveryPoint
                        RecoveryDPSites(j).X1(n) = dRecoveryDistance(1);
                        RecoveryDPSites(j).Y1(n) = dRecoveryDistance(2);
                        RecoveryDPSites(j).CL1(n) = 1000 * (oOptical.TimeSeries(aCurrentRecoveryOrigins(1).(sEvent).Index(max(RecoveryBeatIndex,2)) - ...
                            1 + oOptical.Beats.Indexes(max(RecoveryBeatIndex,2),1)) - ...
                            oOptical.TimeSeries(aCurrentRecoveryOrigins(1).(sEvent).Index(max(RecoveryBeatIndex-1,1)) - ...
                            1 + oOptical.Beats.Indexes(max(RecoveryBeatIndex-1,1),1)));
                    end
                end
            end
        case 'CCh'
            DPSites = {repmat(struct('X1',NaN(31,1),'Y1',NaN(31,1),'X2',NaN(31,1),'Y2',NaN(31,1),...
                'CL1',NaN(31,1),'CL2',NaN(31,1)),1,numel(aFolder)), ...
                repmat(struct('X1',NaN(31,1),'Y1',NaN(31,1),'X2',NaN(31,1),'Y2',NaN(31,1),...
                'CL1',NaN(31,1),'CL2',NaN(31,1)),1,numel(aFolder))};
            
            %loop through tests
            for j = 1:numel(aFolder)
                %loop through onset and recovery, always 2 phases
                for ii = 1:2
                    %loop through files specified for this phase
                    iDPSiteIndex = 1; %index to start of loop through X1, X2 etc arrays in DPSites
                    for nn = 1:numel(aFolder{j}{ii})
                        aFile = char(aFolder{j}{ii}{nn});
                        %load the optical file
                        oOptical = GetOpticalFromMATFile(Optical,aFile); %get optical file
                        fprintf('Loaded %s\n', aFile);
                        aBeats = aShiftIndexes{p}{j}{ii}{nn}{1};
                        
                        % % %get origin data
                        aOrigins = MultiLevelSubsRef(oOptical.oDAL.oHelper,oOptical.Electrodes,'aghsm','Origin');
                        aBeatOrigins = aOrigins(aBeats,:);
                        
                        %loop through beats
                        dDistance = [NaN,NaN];
                        %                     dRecoveryDistance = [NaN,NaN];
                        %get the axis points
                        aAxisData = cell2mat({oOptical.Electrodes(:).AxisPoint});
                        oAxesElectrodes = oOptical.Electrodes(aAxisData);
                        aAxesCoords = cell2mat({oAxesElectrodes(:).Coords});
                        bFirstPoint = false;
                        %                     bFirstRecoveryPoint = false;
                        if isfield(oOptical.Electrodes(1),'amsps')
                            sEvent = 'amsps';
                        else
                            sEvent = 'arsps';
                        end
                        for n = 1:numel(aBeats)
                            iBeatIndex = aBeats(n);
                            aBeatElectrodes = oOptical.Electrodes(aBeatOrigins(n,:));
                            if ~isempty(aBeatElectrodes)
                                bFirstPoint = true;
                                aBeatPoints = cell2mat({aBeatElectrodes(:).Coords});
                                for m = 1:size(aBeatPoints,2)
                                    %transform coords
                                    aNewBeatPoints = TransformCoordinates(aAxesCoords(:,2),aAxesCoords(:,1),aBeatPoints(:,m));
                                    DPSites{ii}(j).(['X',num2str(m)])(iDPSiteIndex) = aNewBeatPoints(1);
                                    DPSites{ii}(j).(['Y',num2str(m)])(iDPSiteIndex) = aNewBeatPoints(2);
                                    dDistance = [aNewBeatPoints(1),aNewBeatPoints(2)];
                                    DPSites{ii}(j).(['CL',num2str(m)])(iDPSiteIndex) = 1000 * (oOptical.TimeSeries(aBeatElectrodes(m).(sEvent).Index(iBeatIndex) - ...
                                        1 + oOptical.Beats.Indexes(iBeatIndex,1)) - ...
                                        oOptical.TimeSeries(aBeatElectrodes(m).(sEvent).Index(iBeatIndex-1) - ...
                                        1 + oOptical.Beats.Indexes(iBeatIndex-1,1)));
                                end
                                aCurrentOrigins = aBeatElectrodes;
                            elseif bFirstPoint
                                DPSites{ii}(j).X1(iDPSiteIndex) = dDistance(1);
                                DPSites{ii}(j).Y1(iDPSiteIndex) = dDistance(2);
                                DPSites{ii}(j).CL1(iDPSiteIndex) = 1000 * (oOptical.TimeSeries(aCurrentOrigins(1).(sEvent).Index(iBeatIndex) - ...
                                    1 + oOptical.Beats.Indexes(iBeatIndex,1)) - ...
                                    oOptical.TimeSeries(aCurrentOrigins(1).(sEvent).Index(iBeatIndex-1) - ...
                                    1 + oOptical.Beats.Indexes(iBeatIndex-1,1)));
                            end
                            %increment DPSitesIndex
                            iDPSiteIndex = iDPSiteIndex + 1;
                        end
                    end
                end
            end
            
    end
    %build save file path
    [pathstr, name, ext, versn] = fileparts(aFile);
    [startIndex, endIndex, tokIndex, matchStr, tokenStr, exprNames, splitStr] = regexp(aFile, filesep);
    sSavePath = '';
    for q = 1:numel(splitStr)-2
        sSavePath = [sSavePath, splitStr{q}, filesep];
    end
    save([sSavePath,upper(sStimulationType(1)),sStimulationType(2:end),'Data_20180304.mat'],'DPSites');
    fprintf('Saved %s\n', [sSavePath,upper(sStimulationType(1)),sStimulationType(2:end),'Data_20180304.mat']);
end

%% old code for CCh
%             aDistance = cell(1,numel(aFolder));
%             for j = 1:numel(aFolder)
%                 %get optical entities
%                 listing = dir(aFolder{j}); %names of files vary so just get all the files in dir
%                 aFilesInFolder = {listing(:).name}; %convert to cell array
%                 aFileIndex = regexp(aFilesInFolder, [sStimulationType,'\d*[a-z_]\w*g10_LP100Hz-waveEach.mat']); %find index of right file
%                 aOpticalFileName = {aFilesInFolder{find(~cellfun('isempty', aFileIndex),5)}}; %build file name
%                 %loop through entities
%                 aDistance{j} = cell(1,size(aOpticalFileName,2));
%                 for q = 1:size(aOpticalFileName,2)
%                     oOptical = GetOpticalFromMATFile(Optical,[aFolder{j},'\',char(aOpticalFileName{q})]); %get optical file
%                     fprintf('Loaded %s\n', [aFolder{j},'\',aOpticalFileName{q}]);
%                     %get origin data
%                     aOrigins = MultiLevelSubsRef(oOptical.oDAL.oHelper,oOptical.Electrodes,'aghsm','Origin');
%                     % %     loop through beats
%                     aThisCoords = cell(size(aOrigins,1),1);
%                     aThisDistance = NaN(size(aOrigins,1),2);
%                     aPoints = zeros(5,2);
%                     iCount = 1;
%                     dDistance = NaN;
%                     % %     get the axis points
%                     aAxisData = cell2mat({oOptical.Electrodes(:).AxisPoint});
%                     oAxesElectrodes = oOptical.Electrodes(aAxisData);
%                     aAxesCoords = cell2mat({oAxesElectrodes(:).Coords});
%                     bFirstPoint = false;
%                     for n = 1:size(aOrigins,1)
%                         aElectrodes = oOptical.Electrodes(aOrigins(n,:));
%                         if ~isempty(aElectrodes)
%                             bFirstPoint = true;
%                             aBeatPoints = cell2mat({aElectrodes(:).Coords});
%                             aThisCoords{n} = aBeatPoints;
%                             for m = 1:size(aBeatPoints,2)
%                                 % % %                 transform coords
%                                 aNewBeatPoints = TransformCoordinates(aAxesCoords(:,2),aAxesCoords(:,1),aBeatPoints(:,m));
%                                 dDistance = aNewBeatPoints(2);
%                                 aThisDistance(n,m) = dDistance;
%                             end
%                         elseif bFirstPoint
%                             aThisDistance(n,1) = dDistance;
%                         end
%                     end
%                     if p == 17 && j == 1 && q == 1
%                         aDistance{j}{q} = vertcat(aThisDistance(1:35,:),[NaN,NaN],[NaN,NaN],[NaN,NaN],aThisDistance(36:end,:));
%                     else
%                         aDistance{j}{q} = aThisDistance;
%                     end
%
%                 end
%             end

